<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>c1ino&#39;s Blog</title>
  
  
  <link href="/c1ino/atom.xml" rel="self"/>
  
  <link href="https://c1ino.github.io/c1ino/"/>
  <updated>2020-02-13T18:03:12.593Z</updated>
  <id>https://c1ino.github.io/c1ino/</id>
  
  <author>
    <name>c1ino</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python3 重载主模块(__main__)的权宜之计(workaround)</title>
    <link href="https://c1ino.github.io/c1ino/2020/02-10-python-reload-main-module-workaround.html"/>
    <id>https://c1ino.github.io/c1ino/2020/02-10-python-reload-main-module-workaround.html</id>
    <published>2020-02-10T03:10:16.000Z</published>
    <updated>2020-02-13T18:03:12.593Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文经验仅供参考。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;概要&quot;&gt;&lt;a href=&quot;#概要&quot; class=&quot;headerlink&quot; title=&quot;概要&quot;&gt;&lt;/a&gt;概要&lt;/h2&gt;&lt;p&gt;既不了解 &lt;code&gt;import&lt;/code&gt; 原理，也不了解 &lt;code&gt;ModuleSpec, loader, importer&lt;/code&gt; ，更不了解 &lt;code&gt;importlib&lt;/code&gt; 模块的情况下，所写出的&lt;s&gt;邪门歪道式&lt;/s&gt;强行重载主模块(&lt;code&gt;__main__&lt;/code&gt;)的方法。&lt;/p&gt;
&lt;h3 id=&quot;别名-Alias-for-SEO&quot;&gt;&lt;a href=&quot;#别名-Alias-for-SEO&quot; class=&quot;headerlink&quot; title=&quot;别名/Alias for SEO&quot;&gt;&lt;/a&gt;别名/Alias for SEO&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;   重载 / 重新加载 / 热重载 / 热更新&lt;br&gt;    主模块 / 当前模块 / 顶层模块 / 顶层脚本环境 / 顶层代码 / 顶层文件 / 主文件&lt;br&gt;    权宜之计 / 解决方法 / 怎么 / 怎样 / 如何&lt;br&gt;    交互模式 / 交互式 / 互动式&lt;br&gt;    Python3 / Python 3.x / py3&lt;br&gt;    top-level script, interactive mode, main module reload, workaround, how to  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;权宜之计-TL-DR&quot;&gt;&lt;a href=&quot;#权宜之计-TL-DR&quot; class=&quot;headerlink&quot; title=&quot;权宜之计/TL;DR&quot;&gt;&lt;/a&gt;权宜之计/TL;DR&lt;/h2&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;reload__main__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;reload __main__ workaround&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# __main__ module&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mod = sys.modules[&lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# reload&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    loader = mod.__dict__[&lt;span class=&quot;string&quot;&gt;&#39;__loader__&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    loader.exec_module(mod)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# from __main__ import *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sys.modules[&lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;].__dict__.update(mod.__dict__)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mod&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;或者这篇讨论中列举的方法？（未验证）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/29960634/reload-the-currently-running-python-script/29962256#29962256&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://stackoverflow.com/questions/29960634/reload-the-currently-running-python-script/29962256#29962256&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://c1ino.github.io/c1ino/categories/Note/"/>
    
    
      <category term="Python3" scheme="https://c1ino.github.io/c1ino/tags/Python3/"/>
    
      <category term="workaround" scheme="https://c1ino.github.io/c1ino/tags/workaround/"/>
    
  </entry>
  
  <entry>
    <title>Python3 venv 模块 No module named &#39;encodings&#39; 其中一种解决办法</title>
    <link href="https://c1ino.github.io/c1ino/2020/01-19-python-venv-module-fatal-error.html"/>
    <id>https://c1ino.github.io/c1ino/2020/01-19-python-venv-module-fatal-error.html</id>
    <published>2020-01-19T02:12:19.000Z</published>
    <updated>2020-02-03T22:05:42.781Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文经验仅供参考。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;报错信息&quot;&gt;&lt;a href=&quot;#报错信息&quot; class=&quot;headerlink&quot; title=&quot;报错信息&quot;&gt;&lt;/a&gt;报错信息&lt;/h1&gt;&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Fatal Python error: Py_Initialize: unable to load the file system codec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;ModuleNotFoundError: &lt;span class=&quot;title&quot;&gt;No&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;named&lt;/span&gt; &#39;&lt;span class=&quot;title&quot;&gt;encodings&lt;/span&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;Win10 系统中使用 Python 3.x 自带的 venv 模块所生成的虚拟环境时出现的错误。&lt;/p&gt;
&lt;h1 id=&quot;解决办法-TL-DR&quot;&gt;&lt;a href=&quot;#解决办法-TL-DR&quot; class=&quot;headerlink&quot; title=&quot;解决办法/TL;DR&quot;&gt;&lt;/a&gt;解决办法/TL;DR&lt;/h1&gt;&lt;p&gt;恢复安装 &lt;code&gt;venv_path\pyvenv.cfg&lt;/code&gt;（虚拟环境配置文件）所指定的特定路径和版本的 python 解释器。&lt;br&gt;（或者使用 &lt;code&gt;python -m venv --upgrade &amp;quot;venv_path&amp;quot;&lt;/code&gt; 更新配置文件以指定虚拟环境使用系统中&lt;code&gt;当前的 python 解释器&lt;/code&gt;？）&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://c1ino.github.io/c1ino/categories/Note/"/>
    
    
      <category term="Python3" scheme="https://c1ino.github.io/c1ino/tags/Python3/"/>
    
      <category term="Win10" scheme="https://c1ino.github.io/c1ino/tags/Win10/"/>
    
  </entry>
  
  <entry>
    <title>使用 Win10 命令提示符自带命令实现彩色输出</title>
    <link href="https://c1ino.github.io/c1ino/2019/08-03-colored-echo-in-win10-command-prompt.html"/>
    <id>https://c1ino.github.io/c1ino/2019/08-03-colored-echo-in-win10-command-prompt.html</id>
    <published>2019-08-03T13:18:22.000Z</published>
    <updated>2019-08-11T16:03:13.434Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;原理是使用 &lt;code&gt;ANSI 转义序列（ANSI escape code）&lt;/code&gt; 来控制文本的颜色，在 &lt;code&gt;Win10&lt;/code&gt; 系统的 &lt;code&gt;命令提示符&lt;/code&gt; / &lt;code&gt;命令行&lt;/code&gt; / &lt;code&gt;控制台&lt;/code&gt; / &lt;code&gt;cmd&lt;/code&gt; 的窗口中仅使用 &lt;code&gt;cmd.exe&lt;/code&gt; 内置的命令来实现彩色输出，无论是在 &lt;code&gt;Command Prompt（命令提示符）&lt;/code&gt; 中还是 &lt;code&gt;.bat&lt;/code&gt; / &lt;code&gt;.cmd&lt;/code&gt; 批处理脚本中。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ANSI 转义序列&lt;/code&gt; 支持的颜色： &lt;code&gt;3/4 bit（8/16色）&lt;/code&gt;、&lt;code&gt;8 bit（256色）&lt;/code&gt;、&lt;code&gt;24 bit（RGB真彩色）&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;限制：&lt;code&gt;Win10&lt;/code&gt; 较旧的版本可能不支持。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文仅作分享，不保证准确性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;前言&lt;/li&gt;
&lt;li&gt;目录&lt;/li&gt;
&lt;li&gt;简介&lt;ul&gt;
&lt;li&gt;FAQ&lt;/li&gt;
&lt;li&gt;原理与方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;3/4 bit（8/16色）&lt;/li&gt;
&lt;li&gt;8 bit（256色）&lt;/li&gt;
&lt;li&gt;24 bit（RGB真彩色）&lt;/li&gt;
&lt;li&gt;参考
    
    </summary>
    
      <category term="笔记" scheme="https://c1ino.github.io/c1ino/categories/Note/"/>
    
    
      <category term="Win10" scheme="https://c1ino.github.io/c1ino/tags/Win10/"/>
    
      <category term="batch/cmd" scheme="https://c1ino.github.io/c1ino/tags/batch-cmd/"/>
    
      <category term="CLI" scheme="https://c1ino.github.io/c1ino/tags/CLI/"/>
    
  </entry>
  
  <entry>
    <title>简易建立 Win10 至 iOS 的多媒体无线串流</title>
    <link href="https://c1ino.github.io/c1ino/2019/06-19-streaming-from-win10-to-ios-primer.html"/>
    <id>https://c1ino.github.io/c1ino/2019/06-19-streaming-from-win10-to-ios-primer.html</id>
    <published>2019-06-18T16:00:00.000Z</published>
    <updated>2019-07-30T09:24:35.662Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;关于如何在局域网内&lt;strong&gt;从 Win10 系统串流至 iOS 系统&lt;/strong&gt;的一些简易方法的总结。&lt;/p&gt;
&lt;p&gt;主要使用 &lt;strong&gt;FFmpeg&lt;/strong&gt; 和 iOS 的 &lt;strong&gt;VLC&lt;/strong&gt; 应用通过常见的流媒体协议实现&lt;strong&gt;直播&lt;/strong&gt;串流，以及其他一些不需使用 FFmpeg 的&lt;strong&gt;点播&lt;/strong&gt;串流方法。&lt;/p&gt;
&lt;p&gt;（多媒体串流，指无需下载完整文件就可以播放流媒体。）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;s&gt;写作 primer guide，读作笔记&lt;/s&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;前言&lt;/li&gt;
&lt;li&gt;目录&lt;/li&gt;
&lt;li&gt;简介&lt;ul&gt;
&lt;li&gt;用途&lt;/li&gt;
&lt;li&gt;优点&lt;/li&gt;
&lt;li&gt;弊端&lt;/li&gt;
&lt;li&gt;环境准备参考&lt;/li&gt;
&lt;li&gt;FFmpeg 使用示例&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;直播&lt;ul&gt;
&lt;li&gt;HTTP 点对点串流&lt;/li&gt;
&lt;li&gt;UDP/RTP 组播串流&lt;/li&gt;
&lt;li&gt;RTMP/HLS/DASH 流媒体服务器串流&lt;/li&gt;
&lt;li&gt;直播附笔&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;点播&lt;ul&gt;
&lt;li&gt;常见文件服务器&lt;/li&gt;
&lt;li&gt;DLNA / UPnP 服务器&lt;/li&gt;
&lt;li&gt;点播附笔&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;其他类型&lt;/li&gt;
&lt;li&gt;附录&lt;ul&gt;
&lt;li&gt;部分相关参考&lt;/li&gt;
&lt;li&gt;题外话
    
    </summary>
    
      <category term="笔记" scheme="https://c1ino.github.io/c1ino/categories/Note/"/>
    
      <category term="串流" scheme="https://c1ino.github.io/c1ino/categories/Streaming/"/>
    
    
      <category term="Win10" scheme="https://c1ino.github.io/c1ino/tags/Win10/"/>
    
      <category term="iOS" scheme="https://c1ino.github.io/c1ino/tags/iOS/"/>
    
      <category term="VLC" scheme="https://c1ino.github.io/c1ino/tags/VLC/"/>
    
      <category term="FFmpeg" scheme="https://c1ino.github.io/c1ino/tags/FFmpeg/"/>
    
      <category term="streaming" scheme="https://c1ino.github.io/c1ino/tags/streaming/"/>
    
  </entry>
  
</feed>
